# yaml-language-server: $schema=https://raw.githubusercontent.com/OAI/OpenAPI-Specification/main/schemas/v3.0/schema.json

openapi: 3.0.3
info:
  title: Campaign Manager
  description: Campaign Manager Rest API.
  version: 0.1.0

#servers:
#  - url: http://localhost:3000
#    description: Local Dev server

paths:
  /ping:
    get:
      summary: Ping server
      responses:
        200:
          description: Success response
  /tasks:
    get:
      summary: List tasks
      responses:
        { }
    post:
      summary: Add new task
      responses: { }
  /projects:
    get:
      summary: List projects
      responses: { }
    post:
      summary: Add new projects
      responses: { }
  /fileTree:
    get:
      summary: List files including folders
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/File"
  /fileTree/{filePath}:
    get:
      summary: List files including folders
      parameters:
        - name: filePath
          in: path
          required: true
          schema:
            type: string
            example: "/path/to/file"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/File"
  /files:
    post:
      summary: Add new file or folder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/File"
      responses:
        204:
          description: Success with no content
    delete:
      summary: Delete files or folders
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - path
              properties:
                path:
                  type: string
      responses:
        204:
          description: Success with no content
        404:
          description: Non-existing path
    put:
      summary: Update files
      responses: { }
  /file/{filePath}:
    get:
      summary: Download plain/text file
      parameters:
        - name: filePath
          in: path
          required: true
          schema:
            type: string
            example: "/path/to/file"
      responses:
        200:
          description: Success
          content:
            plain/text:
              schema:
                type: string
        400:
          description: No plain/text file requested
        404:
          description: Non-existing path
    put:
      summary: Update file
      parameters:
        - name: filePath
          in: path
          required: true
          schema:
            type: string
            example: "/path/to/file"
      requestBody:
        content:
          plain/text:
            schema:
              type: string
      responses:
        200:
          description: Success
        400:
          description: No plain/text file requested
        404:
          description: Non-existing path

components:
  schemas:
    File:
      required:
        - name
        - isDir
      properties:
        name:
          type: string
        isDir:
          type: boolean
